// automatically generated by the FlatBuffers compiler, do not modify

package com.teamnova.server.object;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TopRanking extends Table {
  public static TopRanking getRootAsTopRanking(ByteBuffer _bb) { return getRootAsTopRanking(_bb, new TopRanking()); }
  public static TopRanking getRootAsTopRanking(ByteBuffer _bb, TopRanking obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public TopRanking __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean request() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public RankUser ranklist(int j) { return ranklist(new RankUser(), j); }
  public RankUser ranklist(RankUser obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ranklistLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createTopRanking(FlatBufferBuilder builder,
      boolean request,
      int ranklistOffset) {
    builder.startObject(2);
    TopRanking.addRanklist(builder, ranklistOffset);
    TopRanking.addRequest(builder, request);
    return TopRanking.endTopRanking(builder);
  }

  public static void startTopRanking(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addRequest(FlatBufferBuilder builder, boolean request) { builder.addBoolean(0, request, false); }
  public static void addRanklist(FlatBufferBuilder builder, int ranklistOffset) { builder.addOffset(1, ranklistOffset, 0); }
  public static int createRanklistVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRanklistVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endTopRanking(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

