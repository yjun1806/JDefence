// automatically generated by the FlatBuffers compiler, do not modify

package com.teamnova.server.object;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CheckPassword extends Table {
  public static CheckPassword getRootAsCheckPassword(ByteBuffer _bb) { return getRootAsCheckPassword(_bb, new CheckPassword()); }
  public static CheckPassword getRootAsCheckPassword(ByteBuffer _bb, CheckPassword obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public CheckPassword __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String password() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer passwordAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer passwordInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public boolean Iscorrect() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int roomnumber() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createCheckPassword(FlatBufferBuilder builder,
      int passwordOffset,
      boolean Iscorrect,
      int roomnumber) {
    builder.startObject(3);
    CheckPassword.addRoomnumber(builder, roomnumber);
    CheckPassword.addPassword(builder, passwordOffset);
    CheckPassword.addIscorrect(builder, Iscorrect);
    return CheckPassword.endCheckPassword(builder);
  }

  public static void startCheckPassword(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addPassword(FlatBufferBuilder builder, int passwordOffset) { builder.addOffset(0, passwordOffset, 0); }
  public static void addIscorrect(FlatBufferBuilder builder, boolean Iscorrect) { builder.addBoolean(1, Iscorrect, false); }
  public static void addRoomnumber(FlatBufferBuilder builder, int roomnumber) { builder.addInt(2, roomnumber, 0); }
  public static int endCheckPassword(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

