// automatically generated by the FlatBuffers compiler, do not modify

package com.teamnova.server.object;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class LeaveRoom extends Table {
  public static LeaveRoom getRootAsLeaveRoom(ByteBuffer _bb) { return getRootAsLeaveRoom(_bb, new LeaveRoom()); }
  public static LeaveRoom getRootAsLeaveRoom(ByteBuffer _bb, LeaveRoom obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public LeaveRoom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int LeaveUserID() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int LeaveRoomnumber() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createLeaveRoom(FlatBufferBuilder builder,
      int LeaveUserID,
      int LeaveRoomnumber) {
    builder.startObject(2);
    LeaveRoom.addLeaveRoomnumber(builder, LeaveRoomnumber);
    LeaveRoom.addLeaveUserID(builder, LeaveUserID);
    return LeaveRoom.endLeaveRoom(builder);
  }

  public static void startLeaveRoom(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addLeaveUserID(FlatBufferBuilder builder, int LeaveUserID) { builder.addInt(0, LeaveUserID, 0); }
  public static void addLeaveRoomnumber(FlatBufferBuilder builder, int LeaveRoomnumber) { builder.addInt(1, LeaveRoomnumber, 0); }
  public static int endLeaveRoom(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

