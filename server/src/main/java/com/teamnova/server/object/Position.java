// automatically generated by the FlatBuffers compiler, do not modify

package com.teamnova.server.object;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Position extends Table {
  public static Position getRootAsPosition(ByteBuffer _bb) { return getRootAsPosition(_bb, new Position()); }
  public static Position getRootAsPosition(ByteBuffer _bb, Position obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Position __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Location loc() { return loc(new Location()); }
  public Location loc(Location obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Rotation rot() { return rot(new Rotation()); }
  public Rotation rot(Rotation obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Velocity voc() { return voc(new Velocity()); }
  public Velocity voc(Velocity obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createPosition(FlatBufferBuilder builder,
      int locOffset,
      int rotOffset,
      int vocOffset) {
    builder.startObject(3);
    Position.addVoc(builder, vocOffset);
    Position.addRot(builder, rotOffset);
    Position.addLoc(builder, locOffset);
    return Position.endPosition(builder);
  }

  public static void startPosition(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addLoc(FlatBufferBuilder builder, int locOffset) { builder.addOffset(0, locOffset, 0); }
  public static void addRot(FlatBufferBuilder builder, int rotOffset) { builder.addOffset(1, rotOffset, 0); }
  public static void addVoc(FlatBufferBuilder builder, int vocOffset) { builder.addOffset(2, vocOffset, 0); }
  public static int endPosition(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

